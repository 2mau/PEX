"use strict";module.exports = validate20;module.exports.default = validate20;const schema22 = {"$schema":"http://json-schema.org/draft-07/schema#","title":"Presentation Definition","definitions":{"schema":{"type":"object","properties":{"uri":{"type":"string"},"required":{"type":"boolean"}},"required":["uri"],"additionalProperties":false},"issuance":{"type":"object","properties":{"manifest":{"type":"string"}},"additionalProperties":true},"filter":{"type":"object","properties":{"type":{"type":"string"},"format":{"type":"string"},"pattern":{"type":"string"},"minimum":{"type":["number","string"]},"minLength":{"type":"integer"},"maxLength":{"type":"integer"},"exclusiveMinimum":{"type":["number","string"]},"exclusiveMaximum":{"type":["number","string"]},"maximum":{"type":["number","string"]},"const":{"type":["number","string"]},"enum":{"type":"array","items":{"type":["number","string"]}},"not":{"type":"object","minProperties":1}},"required":["type"],"additionalProperties":false},"format":{"type":"object","patternProperties":{"^jwt$|^jwt_vc$|^jwt_vp$":{"type":"object","properties":{"alg":{"type":"array","minItems":1,"items":{"type":"string"}}},"required":["alg"],"additionalProperties":false},"^ldp_vc$|^ldp_vp$|^ldp$":{"type":"object","properties":{"proof_type":{"type":"array","minItems":1,"items":{"type":"string"}}},"required":["proof_type"],"additionalProperties":false},"additionalProperties":false},"additionalProperties":false},"submission_requirements":{"type":"object","oneOf":[{"properties":{"name":{"type":"string"},"purpose":{"type":"string"},"rule":{"type":"string","enum":["all","pick"]},"count":{"type":"integer","minimum":1},"min":{"type":"integer","minimum":0},"max":{"type":"integer","minimum":0},"from":{"type":"string"}},"required":["rule","from"],"additionalProperties":false},{"properties":{"name":{"type":"string"},"purpose":{"type":"string"},"rule":{"type":"string","enum":["all","pick"]},"count":{"type":"integer","minimum":1},"min":{"type":"integer","minimum":0},"max":{"type":"integer","minimum":0},"from_nested":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/submission_requirements"}}},"required":["rule","from_nested"],"additionalProperties":false}]},"input_descriptors":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"purpose":{"type":"string"},"group":{"type":"array","items":{"type":"string"}},"schema":{"type":"array","items":{"$ref":"#/definitions/schema"}},"issuance":{"type":"array","items":{"$ref":"#/definitions/issuance"}},"constraints":{"type":"object","properties":{"limit_disclosure":{"type":"string","enum":["required","preferred"]},"statuses":{"type":"object","properties":{"active":{"type":"object","properties":{"directive":{"type":"string","enum":["required","allowed","disallowed"]}}},"suspended":{"type":"object","properties":{"directive":{"type":"string","enum":["required","allowed","disallowed"]}}},"revoked":{"type":"object","properties":{"directive":{"type":"string","enum":["required","allowed","disallowed"]}}}}},"fields":{"type":"array","items":{"$ref":"#/definitions/field"}},"subject_is_issuer":{"type":"string","enum":["required","preferred"]},"is_holder":{"type":"array","items":{"type":"object","properties":{"field_id":{"type":"array","items":{"type":"string"}},"directive":{"type":"string","enum":["required","preferred"]}},"required":["field_id","directive"],"additionalProperties":false}},"same_subject":{"type":"array","items":{"type":"object","properties":{"field_id":{"type":"array","items":{"type":"string"}},"directive":{"type":"string","enum":["required","preferred"]}},"required":["field_id","directive"],"additionalProperties":false}}},"additionalProperties":false}},"required":["id","schema"],"additionalProperties":false},"field":{"type":"object","oneOf":[{"properties":{"id":{"type":"string"},"path":{"type":"array","items":{"type":"string"}},"purpose":{"type":"string"},"filter":{"$ref":"#/definitions/filter"}},"required":["path"],"additionalProperties":false},{"properties":{"id":{"type":"string"},"path":{"type":"array","items":{"type":"string"}},"purpose":{"type":"string"},"filter":{"$ref":"#/definitions/filter"},"predicate":{"type":"string","enum":["required","preferred"]}},"required":["path","filter","predicate"],"additionalProperties":false}]}},"type":"object","properties":{"presentation_definition":{"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"purpose":{"type":"string"},"format":{"$ref":"#/definitions/format"},"submission_requirements":{"type":"array","items":{"$ref":"#/definitions/submission_requirements"}},"input_descriptors":{"type":"array","items":{"$ref":"#/definitions/input_descriptors"}}},"required":["id","input_descriptors"],"additionalProperties":false}}};const schema23 = {"type":"object","patternProperties":{"^jwt$|^jwt_vc$|^jwt_vp$":{"type":"object","properties":{"alg":{"type":"array","minItems":1,"items":{"type":"string"}}},"required":["alg"],"additionalProperties":false},"^ldp_vc$|^ldp_vp$|^ldp$":{"type":"object","properties":{"proof_type":{"type":"array","minItems":1,"items":{"type":"string"}}},"required":["proof_type"],"additionalProperties":false},"additionalProperties":false},"additionalProperties":false};const pattern0 = new RegExp("^jwt$|^jwt_vc$|^jwt_vp$", "u");const pattern1 = new RegExp("^ldp_vc$|^ldp_vp$|^ldp$", "u");const pattern2 = new RegExp("additionalProperties", "u");const schema24 = {"type":"object","oneOf":[{"properties":{"name":{"type":"string"},"purpose":{"type":"string"},"rule":{"type":"string","enum":["all","pick"]},"count":{"type":"integer","minimum":1},"min":{"type":"integer","minimum":0},"max":{"type":"integer","minimum":0},"from":{"type":"string"}},"required":["rule","from"],"additionalProperties":false},{"properties":{"name":{"type":"string"},"purpose":{"type":"string"},"rule":{"type":"string","enum":["all","pick"]},"count":{"type":"integer","minimum":1},"min":{"type":"integer","minimum":0},"max":{"type":"integer","minimum":0},"from_nested":{"type":"array","minItems":1,"items":{"$ref":"#/definitions/submission_requirements"}}},"required":["rule","from_nested"],"additionalProperties":false}]};const wrapper0 = {validate: validate21};function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(!(data && typeof data == "object" && !Array.isArray(data))){validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}const _errs1 = errors;let valid0 = false;let passing0 = null;const _errs2 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.rule === undefined) && (missing0 = "rule")) || ((data.from === undefined) && (missing0 = "from"))){const err0 = {instancePath,schemaPath:"#/oneOf/0/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}else {const _errs3 = errors;for(const key0 in data){if(!(((((((key0 === "name") || (key0 === "purpose")) || (key0 === "rule")) || (key0 === "count")) || (key0 === "min")) || (key0 === "max")) || (key0 === "from"))){const err1 = {instancePath,schemaPath:"#/oneOf/0/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;break;}}if(_errs3 === errors){if(data.name !== undefined){const _errs4 = errors;if(typeof data.name !== "string"){const err2 = {instancePath:instancePath+"/name",schemaPath:"#/oneOf/0/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data.purpose !== undefined){const _errs6 = errors;if(typeof data.purpose !== "string"){const err3 = {instancePath:instancePath+"/purpose",schemaPath:"#/oneOf/0/properties/purpose/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}var valid1 = _errs6 === errors;}else {var valid1 = true;}if(valid1){if(data.rule !== undefined){let data2 = data.rule;const _errs8 = errors;if(typeof data2 !== "string"){const err4 = {instancePath:instancePath+"/rule",schemaPath:"#/oneOf/0/properties/rule/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}if(!((data2 === "all") || (data2 === "pick"))){const err5 = {instancePath:instancePath+"/rule",schemaPath:"#/oneOf/0/properties/rule/enum",keyword:"enum",params:{allowedValues: schema24.oneOf[0].properties.rule.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}var valid1 = _errs8 === errors;}else {var valid1 = true;}if(valid1){if(data.count !== undefined){let data3 = data.count;const _errs10 = errors;if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){const err6 = {instancePath:instancePath+"/count",schemaPath:"#/oneOf/0/properties/count/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}if(errors === _errs10){if((typeof data3 == "number") && (isFinite(data3))){if(data3 < 1 || isNaN(data3)){const err7 = {instancePath:instancePath+"/count",schemaPath:"#/oneOf/0/properties/count/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;}}}var valid1 = _errs10 === errors;}else {var valid1 = true;}if(valid1){if(data.min !== undefined){let data4 = data.min;const _errs12 = errors;if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){const err8 = {instancePath:instancePath+"/min",schemaPath:"#/oneOf/0/properties/min/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}if(errors === _errs12){if((typeof data4 == "number") && (isFinite(data4))){if(data4 < 0 || isNaN(data4)){const err9 = {instancePath:instancePath+"/min",schemaPath:"#/oneOf/0/properties/min/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}}}var valid1 = _errs12 === errors;}else {var valid1 = true;}if(valid1){if(data.max !== undefined){let data5 = data.max;const _errs14 = errors;if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){const err10 = {instancePath:instancePath+"/max",schemaPath:"#/oneOf/0/properties/max/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}if(errors === _errs14){if((typeof data5 == "number") && (isFinite(data5))){if(data5 < 0 || isNaN(data5)){const err11 = {instancePath:instancePath+"/max",schemaPath:"#/oneOf/0/properties/max/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}}}var valid1 = _errs14 === errors;}else {var valid1 = true;}if(valid1){if(data.from !== undefined){const _errs16 = errors;if(typeof data.from !== "string"){const err12 = {instancePath:instancePath+"/from",schemaPath:"#/oneOf/0/properties/from/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}var valid1 = _errs16 === errors;}else {var valid1 = true;}}}}}}}}}}var _valid0 = _errs2 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs18 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing1;if(((data.rule === undefined) && (missing1 = "rule")) || ((data.from_nested === undefined) && (missing1 = "from_nested"))){const err13 = {instancePath,schemaPath:"#/oneOf/1/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}else {const _errs19 = errors;for(const key1 in data){if(!(((((((key1 === "name") || (key1 === "purpose")) || (key1 === "rule")) || (key1 === "count")) || (key1 === "min")) || (key1 === "max")) || (key1 === "from_nested"))){const err14 = {instancePath,schemaPath:"#/oneOf/1/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;break;}}if(_errs19 === errors){if(data.name !== undefined){const _errs20 = errors;if(typeof data.name !== "string"){const err15 = {instancePath:instancePath+"/name",schemaPath:"#/oneOf/1/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}var valid2 = _errs20 === errors;}else {var valid2 = true;}if(valid2){if(data.purpose !== undefined){const _errs22 = errors;if(typeof data.purpose !== "string"){const err16 = {instancePath:instancePath+"/purpose",schemaPath:"#/oneOf/1/properties/purpose/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}var valid2 = _errs22 === errors;}else {var valid2 = true;}if(valid2){if(data.rule !== undefined){let data9 = data.rule;const _errs24 = errors;if(typeof data9 !== "string"){const err17 = {instancePath:instancePath+"/rule",schemaPath:"#/oneOf/1/properties/rule/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}if(!((data9 === "all") || (data9 === "pick"))){const err18 = {instancePath:instancePath+"/rule",schemaPath:"#/oneOf/1/properties/rule/enum",keyword:"enum",params:{allowedValues: schema24.oneOf[1].properties.rule.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}var valid2 = _errs24 === errors;}else {var valid2 = true;}if(valid2){if(data.count !== undefined){let data10 = data.count;const _errs26 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){const err19 = {instancePath:instancePath+"/count",schemaPath:"#/oneOf/1/properties/count/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}if(errors === _errs26){if((typeof data10 == "number") && (isFinite(data10))){if(data10 < 1 || isNaN(data10)){const err20 = {instancePath:instancePath+"/count",schemaPath:"#/oneOf/1/properties/count/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}}}var valid2 = _errs26 === errors;}else {var valid2 = true;}if(valid2){if(data.min !== undefined){let data11 = data.min;const _errs28 = errors;if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){const err21 = {instancePath:instancePath+"/min",schemaPath:"#/oneOf/1/properties/min/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}if(errors === _errs28){if((typeof data11 == "number") && (isFinite(data11))){if(data11 < 0 || isNaN(data11)){const err22 = {instancePath:instancePath+"/min",schemaPath:"#/oneOf/1/properties/min/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}}}var valid2 = _errs28 === errors;}else {var valid2 = true;}if(valid2){if(data.max !== undefined){let data12 = data.max;const _errs30 = errors;if(!(((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12)))){const err23 = {instancePath:instancePath+"/max",schemaPath:"#/oneOf/1/properties/max/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}if(errors === _errs30){if((typeof data12 == "number") && (isFinite(data12))){if(data12 < 0 || isNaN(data12)){const err24 = {instancePath:instancePath+"/max",schemaPath:"#/oneOf/1/properties/max/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;}}}var valid2 = _errs30 === errors;}else {var valid2 = true;}if(valid2){if(data.from_nested !== undefined){let data13 = data.from_nested;const _errs32 = errors;if(errors === _errs32){if(Array.isArray(data13)){if(data13.length < 1){const err25 = {instancePath:instancePath+"/from_nested",schemaPath:"#/oneOf/1/properties/from_nested/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}else {var valid3 = true;const len0 = data13.length;for(let i0=0; i0<len0; i0++){const _errs34 = errors;if(!(wrapper0.validate(data13[i0], {instancePath:instancePath+"/from_nested/" + i0,parentData:data13,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? wrapper0.validate.errors : vErrors.concat(wrapper0.validate.errors);errors = vErrors.length;}var valid3 = _errs34 === errors;if(!valid3){break;}}}}else {const err26 = {instancePath:instancePath+"/from_nested",schemaPath:"#/oneOf/1/properties/from_nested/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}}var valid2 = _errs32 === errors;}else {var valid2 = true;}}}}}}}}}}var _valid0 = _errs18 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}}if(!valid0){const err27 = {instancePath,schemaPath:"#/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;validate21.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}validate21.errors = vErrors;return errors === 0;}const schema25 = {"type":"object","properties":{"id":{"type":"string"},"name":{"type":"string"},"purpose":{"type":"string"},"group":{"type":"array","items":{"type":"string"}},"schema":{"type":"array","items":{"$ref":"#/definitions/schema"}},"issuance":{"type":"array","items":{"$ref":"#/definitions/issuance"}},"constraints":{"type":"object","properties":{"limit_disclosure":{"type":"string","enum":["required","preferred"]},"statuses":{"type":"object","properties":{"active":{"type":"object","properties":{"directive":{"type":"string","enum":["required","allowed","disallowed"]}}},"suspended":{"type":"object","properties":{"directive":{"type":"string","enum":["required","allowed","disallowed"]}}},"revoked":{"type":"object","properties":{"directive":{"type":"string","enum":["required","allowed","disallowed"]}}}}},"fields":{"type":"array","items":{"$ref":"#/definitions/field"}},"subject_is_issuer":{"type":"string","enum":["required","preferred"]},"is_holder":{"type":"array","items":{"type":"object","properties":{"field_id":{"type":"array","items":{"type":"string"}},"directive":{"type":"string","enum":["required","preferred"]}},"required":["field_id","directive"],"additionalProperties":false}},"same_subject":{"type":"array","items":{"type":"object","properties":{"field_id":{"type":"array","items":{"type":"string"}},"directive":{"type":"string","enum":["required","preferred"]}},"required":["field_id","directive"],"additionalProperties":false}}},"additionalProperties":false}},"required":["id","schema"],"additionalProperties":false};const schema26 = {"type":"object","properties":{"uri":{"type":"string"},"required":{"type":"boolean"}},"required":["uri"],"additionalProperties":false};const schema27 = {"type":"object","properties":{"manifest":{"type":"string"}},"additionalProperties":true};const schema28 = {"type":"object","oneOf":[{"properties":{"id":{"type":"string"},"path":{"type":"array","items":{"type":"string"}},"purpose":{"type":"string"},"filter":{"$ref":"#/definitions/filter"}},"required":["path"],"additionalProperties":false},{"properties":{"id":{"type":"string"},"path":{"type":"array","items":{"type":"string"}},"purpose":{"type":"string"},"filter":{"$ref":"#/definitions/filter"},"predicate":{"type":"string","enum":["required","preferred"]}},"required":["path","filter","predicate"],"additionalProperties":false}]};const schema29 = {"type":"object","properties":{"type":{"type":"string"},"format":{"type":"string"},"pattern":{"type":"string"},"minimum":{"type":["number","string"]},"minLength":{"type":"integer"},"maxLength":{"type":"integer"},"exclusiveMinimum":{"type":["number","string"]},"exclusiveMaximum":{"type":["number","string"]},"maximum":{"type":["number","string"]},"const":{"type":["number","string"]},"enum":{"type":"array","items":{"type":["number","string"]}},"not":{"type":"object","minProperties":1}},"required":["type"],"additionalProperties":false};const func4 = Object.prototype.hasOwnProperty;function validate24(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(!(data && typeof data == "object" && !Array.isArray(data))){validate24.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}const _errs1 = errors;let valid0 = false;let passing0 = null;const _errs2 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.path === undefined) && (missing0 = "path")){const err0 = {instancePath,schemaPath:"#/oneOf/0/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}else {const _errs3 = errors;for(const key0 in data){if(!((((key0 === "id") || (key0 === "path")) || (key0 === "purpose")) || (key0 === "filter"))){const err1 = {instancePath,schemaPath:"#/oneOf/0/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;break;}}if(_errs3 === errors){if(data.id !== undefined){const _errs4 = errors;if(typeof data.id !== "string"){const err2 = {instancePath:instancePath+"/id",schemaPath:"#/oneOf/0/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data.path !== undefined){let data1 = data.path;const _errs6 = errors;if(errors === _errs6){if(Array.isArray(data1)){var valid2 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs8 = errors;if(typeof data1[i0] !== "string"){const err3 = {instancePath:instancePath+"/path/" + i0,schemaPath:"#/oneOf/0/properties/path/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}var valid2 = _errs8 === errors;if(!valid2){break;}}}else {const err4 = {instancePath:instancePath+"/path",schemaPath:"#/oneOf/0/properties/path/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}}var valid1 = _errs6 === errors;}else {var valid1 = true;}if(valid1){if(data.purpose !== undefined){const _errs10 = errors;if(typeof data.purpose !== "string"){const err5 = {instancePath:instancePath+"/purpose",schemaPath:"#/oneOf/0/properties/purpose/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;}var valid1 = _errs10 === errors;}else {var valid1 = true;}if(valid1){if(data.filter !== undefined){let data4 = data.filter;const _errs12 = errors;const _errs13 = errors;if(errors === _errs13){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){let missing1;if((data4.type === undefined) && (missing1 = "type")){const err6 = {instancePath:instancePath+"/filter",schemaPath:"#/definitions/filter/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};if(vErrors === null){vErrors = [err6];}else {vErrors.push(err6);}errors++;}else {const _errs15 = errors;for(const key1 in data4){if(!(func4.call(schema29.properties, key1))){const err7 = {instancePath:instancePath+"/filter",schemaPath:"#/definitions/filter/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err7];}else {vErrors.push(err7);}errors++;break;}}if(_errs15 === errors){if(data4.type !== undefined){const _errs16 = errors;if(typeof data4.type !== "string"){const err8 = {instancePath:instancePath+"/filter/type",schemaPath:"#/definitions/filter/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err8];}else {vErrors.push(err8);}errors++;}var valid4 = _errs16 === errors;}else {var valid4 = true;}if(valid4){if(data4.format !== undefined){const _errs18 = errors;if(typeof data4.format !== "string"){const err9 = {instancePath:instancePath+"/filter/format",schemaPath:"#/definitions/filter/properties/format/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err9];}else {vErrors.push(err9);}errors++;}var valid4 = _errs18 === errors;}else {var valid4 = true;}if(valid4){if(data4.pattern !== undefined){const _errs20 = errors;if(typeof data4.pattern !== "string"){const err10 = {instancePath:instancePath+"/filter/pattern",schemaPath:"#/definitions/filter/properties/pattern/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err10];}else {vErrors.push(err10);}errors++;}var valid4 = _errs20 === errors;}else {var valid4 = true;}if(valid4){if(data4.minimum !== undefined){let data8 = data4.minimum;const _errs22 = errors;if((!((typeof data8 == "number") && (isFinite(data8)))) && (typeof data8 !== "string")){const err11 = {instancePath:instancePath+"/filter/minimum",schemaPath:"#/definitions/filter/properties/minimum/type",keyword:"type",params:{type: schema29.properties.minimum.type},message:"must be number,string"};if(vErrors === null){vErrors = [err11];}else {vErrors.push(err11);}errors++;}var valid4 = _errs22 === errors;}else {var valid4 = true;}if(valid4){if(data4.minLength !== undefined){let data9 = data4.minLength;const _errs24 = errors;if(!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))){const err12 = {instancePath:instancePath+"/filter/minLength",schemaPath:"#/definitions/filter/properties/minLength/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err12];}else {vErrors.push(err12);}errors++;}var valid4 = _errs24 === errors;}else {var valid4 = true;}if(valid4){if(data4.maxLength !== undefined){let data10 = data4.maxLength;const _errs26 = errors;if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){const err13 = {instancePath:instancePath+"/filter/maxLength",schemaPath:"#/definitions/filter/properties/maxLength/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err13];}else {vErrors.push(err13);}errors++;}var valid4 = _errs26 === errors;}else {var valid4 = true;}if(valid4){if(data4.exclusiveMinimum !== undefined){let data11 = data4.exclusiveMinimum;const _errs28 = errors;if((!((typeof data11 == "number") && (isFinite(data11)))) && (typeof data11 !== "string")){const err14 = {instancePath:instancePath+"/filter/exclusiveMinimum",schemaPath:"#/definitions/filter/properties/exclusiveMinimum/type",keyword:"type",params:{type: schema29.properties.exclusiveMinimum.type},message:"must be number,string"};if(vErrors === null){vErrors = [err14];}else {vErrors.push(err14);}errors++;}var valid4 = _errs28 === errors;}else {var valid4 = true;}if(valid4){if(data4.exclusiveMaximum !== undefined){let data12 = data4.exclusiveMaximum;const _errs30 = errors;if((!((typeof data12 == "number") && (isFinite(data12)))) && (typeof data12 !== "string")){const err15 = {instancePath:instancePath+"/filter/exclusiveMaximum",schemaPath:"#/definitions/filter/properties/exclusiveMaximum/type",keyword:"type",params:{type: schema29.properties.exclusiveMaximum.type},message:"must be number,string"};if(vErrors === null){vErrors = [err15];}else {vErrors.push(err15);}errors++;}var valid4 = _errs30 === errors;}else {var valid4 = true;}if(valid4){if(data4.maximum !== undefined){let data13 = data4.maximum;const _errs32 = errors;if((!((typeof data13 == "number") && (isFinite(data13)))) && (typeof data13 !== "string")){const err16 = {instancePath:instancePath+"/filter/maximum",schemaPath:"#/definitions/filter/properties/maximum/type",keyword:"type",params:{type: schema29.properties.maximum.type},message:"must be number,string"};if(vErrors === null){vErrors = [err16];}else {vErrors.push(err16);}errors++;}var valid4 = _errs32 === errors;}else {var valid4 = true;}if(valid4){if(data4.const !== undefined){let data14 = data4.const;const _errs34 = errors;if((!((typeof data14 == "number") && (isFinite(data14)))) && (typeof data14 !== "string")){const err17 = {instancePath:instancePath+"/filter/const",schemaPath:"#/definitions/filter/properties/const/type",keyword:"type",params:{type: schema29.properties.const.type},message:"must be number,string"};if(vErrors === null){vErrors = [err17];}else {vErrors.push(err17);}errors++;}var valid4 = _errs34 === errors;}else {var valid4 = true;}if(valid4){if(data4.enum !== undefined){let data15 = data4.enum;const _errs36 = errors;if(errors === _errs36){if(Array.isArray(data15)){var valid5 = true;const len1 = data15.length;for(let i1=0; i1<len1; i1++){let data16 = data15[i1];const _errs38 = errors;if((!((typeof data16 == "number") && (isFinite(data16)))) && (typeof data16 !== "string")){const err18 = {instancePath:instancePath+"/filter/enum/" + i1,schemaPath:"#/definitions/filter/properties/enum/items/type",keyword:"type",params:{type: schema29.properties.enum.items.type},message:"must be number,string"};if(vErrors === null){vErrors = [err18];}else {vErrors.push(err18);}errors++;}var valid5 = _errs38 === errors;if(!valid5){break;}}}else {const err19 = {instancePath:instancePath+"/filter/enum",schemaPath:"#/definitions/filter/properties/enum/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err19];}else {vErrors.push(err19);}errors++;}}var valid4 = _errs36 === errors;}else {var valid4 = true;}if(valid4){if(data4.not !== undefined){let data17 = data4.not;const _errs40 = errors;if(errors === _errs40){if(data17 && typeof data17 == "object" && !Array.isArray(data17)){if(Object.keys(data17).length < 1){const err20 = {instancePath:instancePath+"/filter/not",schemaPath:"#/definitions/filter/properties/not/minProperties",keyword:"minProperties",params:{limit: 1},message:"must NOT have fewer than 1 properties"};if(vErrors === null){vErrors = [err20];}else {vErrors.push(err20);}errors++;}}else {const err21 = {instancePath:instancePath+"/filter/not",schemaPath:"#/definitions/filter/properties/not/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err21];}else {vErrors.push(err21);}errors++;}}var valid4 = _errs40 === errors;}else {var valid4 = true;}}}}}}}}}}}}}}}else {const err22 = {instancePath:instancePath+"/filter",schemaPath:"#/definitions/filter/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err22];}else {vErrors.push(err22);}errors++;}}var valid1 = _errs12 === errors;}else {var valid1 = true;}}}}}}}var _valid0 = _errs2 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs42 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing2;if((((data.path === undefined) && (missing2 = "path")) || ((data.filter === undefined) && (missing2 = "filter"))) || ((data.predicate === undefined) && (missing2 = "predicate"))){const err23 = {instancePath,schemaPath:"#/oneOf/1/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"};if(vErrors === null){vErrors = [err23];}else {vErrors.push(err23);}errors++;}else {const _errs43 = errors;for(const key2 in data){if(!(((((key2 === "id") || (key2 === "path")) || (key2 === "purpose")) || (key2 === "filter")) || (key2 === "predicate"))){const err24 = {instancePath,schemaPath:"#/oneOf/1/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err24];}else {vErrors.push(err24);}errors++;break;}}if(_errs43 === errors){if(data.id !== undefined){const _errs44 = errors;if(typeof data.id !== "string"){const err25 = {instancePath:instancePath+"/id",schemaPath:"#/oneOf/1/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err25];}else {vErrors.push(err25);}errors++;}var valid6 = _errs44 === errors;}else {var valid6 = true;}if(valid6){if(data.path !== undefined){let data19 = data.path;const _errs46 = errors;if(errors === _errs46){if(Array.isArray(data19)){var valid7 = true;const len2 = data19.length;for(let i2=0; i2<len2; i2++){const _errs48 = errors;if(typeof data19[i2] !== "string"){const err26 = {instancePath:instancePath+"/path/" + i2,schemaPath:"#/oneOf/1/properties/path/items/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err26];}else {vErrors.push(err26);}errors++;}var valid7 = _errs48 === errors;if(!valid7){break;}}}else {const err27 = {instancePath:instancePath+"/path",schemaPath:"#/oneOf/1/properties/path/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err27];}else {vErrors.push(err27);}errors++;}}var valid6 = _errs46 === errors;}else {var valid6 = true;}if(valid6){if(data.purpose !== undefined){const _errs50 = errors;if(typeof data.purpose !== "string"){const err28 = {instancePath:instancePath+"/purpose",schemaPath:"#/oneOf/1/properties/purpose/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err28];}else {vErrors.push(err28);}errors++;}var valid6 = _errs50 === errors;}else {var valid6 = true;}if(valid6){if(data.filter !== undefined){let data22 = data.filter;const _errs52 = errors;const _errs53 = errors;if(errors === _errs53){if(data22 && typeof data22 == "object" && !Array.isArray(data22)){let missing3;if((data22.type === undefined) && (missing3 = "type")){const err29 = {instancePath:instancePath+"/filter",schemaPath:"#/definitions/filter/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"};if(vErrors === null){vErrors = [err29];}else {vErrors.push(err29);}errors++;}else {const _errs55 = errors;for(const key3 in data22){if(!(func4.call(schema29.properties, key3))){const err30 = {instancePath:instancePath+"/filter",schemaPath:"#/definitions/filter/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err30];}else {vErrors.push(err30);}errors++;break;}}if(_errs55 === errors){if(data22.type !== undefined){const _errs56 = errors;if(typeof data22.type !== "string"){const err31 = {instancePath:instancePath+"/filter/type",schemaPath:"#/definitions/filter/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err31];}else {vErrors.push(err31);}errors++;}var valid9 = _errs56 === errors;}else {var valid9 = true;}if(valid9){if(data22.format !== undefined){const _errs58 = errors;if(typeof data22.format !== "string"){const err32 = {instancePath:instancePath+"/filter/format",schemaPath:"#/definitions/filter/properties/format/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err32];}else {vErrors.push(err32);}errors++;}var valid9 = _errs58 === errors;}else {var valid9 = true;}if(valid9){if(data22.pattern !== undefined){const _errs60 = errors;if(typeof data22.pattern !== "string"){const err33 = {instancePath:instancePath+"/filter/pattern",schemaPath:"#/definitions/filter/properties/pattern/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err33];}else {vErrors.push(err33);}errors++;}var valid9 = _errs60 === errors;}else {var valid9 = true;}if(valid9){if(data22.minimum !== undefined){let data26 = data22.minimum;const _errs62 = errors;if((!((typeof data26 == "number") && (isFinite(data26)))) && (typeof data26 !== "string")){const err34 = {instancePath:instancePath+"/filter/minimum",schemaPath:"#/definitions/filter/properties/minimum/type",keyword:"type",params:{type: schema29.properties.minimum.type},message:"must be number,string"};if(vErrors === null){vErrors = [err34];}else {vErrors.push(err34);}errors++;}var valid9 = _errs62 === errors;}else {var valid9 = true;}if(valid9){if(data22.minLength !== undefined){let data27 = data22.minLength;const _errs64 = errors;if(!(((typeof data27 == "number") && (!(data27 % 1) && !isNaN(data27))) && (isFinite(data27)))){const err35 = {instancePath:instancePath+"/filter/minLength",schemaPath:"#/definitions/filter/properties/minLength/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err35];}else {vErrors.push(err35);}errors++;}var valid9 = _errs64 === errors;}else {var valid9 = true;}if(valid9){if(data22.maxLength !== undefined){let data28 = data22.maxLength;const _errs66 = errors;if(!(((typeof data28 == "number") && (!(data28 % 1) && !isNaN(data28))) && (isFinite(data28)))){const err36 = {instancePath:instancePath+"/filter/maxLength",schemaPath:"#/definitions/filter/properties/maxLength/type",keyword:"type",params:{type: "integer"},message:"must be integer"};if(vErrors === null){vErrors = [err36];}else {vErrors.push(err36);}errors++;}var valid9 = _errs66 === errors;}else {var valid9 = true;}if(valid9){if(data22.exclusiveMinimum !== undefined){let data29 = data22.exclusiveMinimum;const _errs68 = errors;if((!((typeof data29 == "number") && (isFinite(data29)))) && (typeof data29 !== "string")){const err37 = {instancePath:instancePath+"/filter/exclusiveMinimum",schemaPath:"#/definitions/filter/properties/exclusiveMinimum/type",keyword:"type",params:{type: schema29.properties.exclusiveMinimum.type},message:"must be number,string"};if(vErrors === null){vErrors = [err37];}else {vErrors.push(err37);}errors++;}var valid9 = _errs68 === errors;}else {var valid9 = true;}if(valid9){if(data22.exclusiveMaximum !== undefined){let data30 = data22.exclusiveMaximum;const _errs70 = errors;if((!((typeof data30 == "number") && (isFinite(data30)))) && (typeof data30 !== "string")){const err38 = {instancePath:instancePath+"/filter/exclusiveMaximum",schemaPath:"#/definitions/filter/properties/exclusiveMaximum/type",keyword:"type",params:{type: schema29.properties.exclusiveMaximum.type},message:"must be number,string"};if(vErrors === null){vErrors = [err38];}else {vErrors.push(err38);}errors++;}var valid9 = _errs70 === errors;}else {var valid9 = true;}if(valid9){if(data22.maximum !== undefined){let data31 = data22.maximum;const _errs72 = errors;if((!((typeof data31 == "number") && (isFinite(data31)))) && (typeof data31 !== "string")){const err39 = {instancePath:instancePath+"/filter/maximum",schemaPath:"#/definitions/filter/properties/maximum/type",keyword:"type",params:{type: schema29.properties.maximum.type},message:"must be number,string"};if(vErrors === null){vErrors = [err39];}else {vErrors.push(err39);}errors++;}var valid9 = _errs72 === errors;}else {var valid9 = true;}if(valid9){if(data22.const !== undefined){let data32 = data22.const;const _errs74 = errors;if((!((typeof data32 == "number") && (isFinite(data32)))) && (typeof data32 !== "string")){const err40 = {instancePath:instancePath+"/filter/const",schemaPath:"#/definitions/filter/properties/const/type",keyword:"type",params:{type: schema29.properties.const.type},message:"must be number,string"};if(vErrors === null){vErrors = [err40];}else {vErrors.push(err40);}errors++;}var valid9 = _errs74 === errors;}else {var valid9 = true;}if(valid9){if(data22.enum !== undefined){let data33 = data22.enum;const _errs76 = errors;if(errors === _errs76){if(Array.isArray(data33)){var valid10 = true;const len3 = data33.length;for(let i3=0; i3<len3; i3++){let data34 = data33[i3];const _errs78 = errors;if((!((typeof data34 == "number") && (isFinite(data34)))) && (typeof data34 !== "string")){const err41 = {instancePath:instancePath+"/filter/enum/" + i3,schemaPath:"#/definitions/filter/properties/enum/items/type",keyword:"type",params:{type: schema29.properties.enum.items.type},message:"must be number,string"};if(vErrors === null){vErrors = [err41];}else {vErrors.push(err41);}errors++;}var valid10 = _errs78 === errors;if(!valid10){break;}}}else {const err42 = {instancePath:instancePath+"/filter/enum",schemaPath:"#/definitions/filter/properties/enum/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err42];}else {vErrors.push(err42);}errors++;}}var valid9 = _errs76 === errors;}else {var valid9 = true;}if(valid9){if(data22.not !== undefined){let data35 = data22.not;const _errs80 = errors;if(errors === _errs80){if(data35 && typeof data35 == "object" && !Array.isArray(data35)){if(Object.keys(data35).length < 1){const err43 = {instancePath:instancePath+"/filter/not",schemaPath:"#/definitions/filter/properties/not/minProperties",keyword:"minProperties",params:{limit: 1},message:"must NOT have fewer than 1 properties"};if(vErrors === null){vErrors = [err43];}else {vErrors.push(err43);}errors++;}}else {const err44 = {instancePath:instancePath+"/filter/not",schemaPath:"#/definitions/filter/properties/not/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err44];}else {vErrors.push(err44);}errors++;}}var valid9 = _errs80 === errors;}else {var valid9 = true;}}}}}}}}}}}}}}}else {const err45 = {instancePath:instancePath+"/filter",schemaPath:"#/definitions/filter/type",keyword:"type",params:{type: "object"},message:"must be object"};if(vErrors === null){vErrors = [err45];}else {vErrors.push(err45);}errors++;}}var valid6 = _errs52 === errors;}else {var valid6 = true;}if(valid6){if(data.predicate !== undefined){let data36 = data.predicate;const _errs82 = errors;if(typeof data36 !== "string"){const err46 = {instancePath:instancePath+"/predicate",schemaPath:"#/oneOf/1/properties/predicate/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err46];}else {vErrors.push(err46);}errors++;}if(!((data36 === "required") || (data36 === "preferred"))){const err47 = {instancePath:instancePath+"/predicate",schemaPath:"#/oneOf/1/properties/predicate/enum",keyword:"enum",params:{allowedValues: schema28.oneOf[1].properties.predicate.enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err47];}else {vErrors.push(err47);}errors++;}var valid6 = _errs82 === errors;}else {var valid6 = true;}}}}}}}}var _valid0 = _errs42 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}}if(!valid0){const err48 = {instancePath,schemaPath:"#/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err48];}else {vErrors.push(err48);}errors++;validate24.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}validate24.errors = vErrors;return errors === 0;}function validate23(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.id === undefined) && (missing0 = "id")) || ((data.schema === undefined) && (missing0 = "schema"))){validate23.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((((((key0 === "id") || (key0 === "name")) || (key0 === "purpose")) || (key0 === "group")) || (key0 === "schema")) || (key0 === "issuance")) || (key0 === "constraints"))){validate23.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.id !== undefined){const _errs2 = errors;if(typeof data.id !== "string"){validate23.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs4 = errors;if(typeof data.name !== "string"){validate23.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.purpose !== undefined){const _errs6 = errors;if(typeof data.purpose !== "string"){validate23.errors = [{instancePath:instancePath+"/purpose",schemaPath:"#/properties/purpose/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.group !== undefined){let data3 = data.group;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data3)){var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs10 = errors;if(typeof data3[i0] !== "string"){validate23.errors = [{instancePath:instancePath+"/group/" + i0,schemaPath:"#/properties/group/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs10 === errors;if(!valid1){break;}}}else {validate23.errors = [{instancePath:instancePath+"/group",schemaPath:"#/properties/group/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.schema !== undefined){let data5 = data.schema;const _errs12 = errors;if(errors === _errs12){if(Array.isArray(data5)){var valid2 = true;const len1 = data5.length;for(let i1=0; i1<len1; i1++){let data6 = data5[i1];const _errs14 = errors;const _errs15 = errors;if(errors === _errs15){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){let missing1;if((data6.uri === undefined) && (missing1 = "uri")){validate23.errors = [{instancePath:instancePath+"/schema/" + i1,schemaPath:"#/definitions/schema/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs17 = errors;for(const key1 in data6){if(!((key1 === "uri") || (key1 === "required"))){validate23.errors = [{instancePath:instancePath+"/schema/" + i1,schemaPath:"#/definitions/schema/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs17 === errors){if(data6.uri !== undefined){const _errs18 = errors;if(typeof data6.uri !== "string"){validate23.errors = [{instancePath:instancePath+"/schema/" + i1+"/uri",schemaPath:"#/definitions/schema/properties/uri/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs18 === errors;}else {var valid4 = true;}if(valid4){if(data6.required !== undefined){const _errs20 = errors;if(typeof data6.required !== "boolean"){validate23.errors = [{instancePath:instancePath+"/schema/" + i1+"/required",schemaPath:"#/definitions/schema/properties/required/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid4 = _errs20 === errors;}else {var valid4 = true;}}}}}else {validate23.errors = [{instancePath:instancePath+"/schema/" + i1,schemaPath:"#/definitions/schema/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs14 === errors;if(!valid2){break;}}}else {validate23.errors = [{instancePath:instancePath+"/schema",schemaPath:"#/properties/schema/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.issuance !== undefined){let data9 = data.issuance;const _errs22 = errors;if(errors === _errs22){if(Array.isArray(data9)){var valid5 = true;const len2 = data9.length;for(let i2=0; i2<len2; i2++){let data10 = data9[i2];const _errs24 = errors;const _errs25 = errors;if(errors === _errs25){if(data10 && typeof data10 == "object" && !Array.isArray(data10)){if(data10.manifest !== undefined){if(typeof data10.manifest !== "string"){validate23.errors = [{instancePath:instancePath+"/issuance/" + i2+"/manifest",schemaPath:"#/definitions/issuance/properties/manifest/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}else {validate23.errors = [{instancePath:instancePath+"/issuance/" + i2,schemaPath:"#/definitions/issuance/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid5 = _errs24 === errors;if(!valid5){break;}}}else {validate23.errors = [{instancePath:instancePath+"/issuance",schemaPath:"#/properties/issuance/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.constraints !== undefined){let data12 = data.constraints;const _errs30 = errors;if(errors === _errs30){if(data12 && typeof data12 == "object" && !Array.isArray(data12)){const _errs32 = errors;for(const key2 in data12){if(!((((((key2 === "limit_disclosure") || (key2 === "statuses")) || (key2 === "fields")) || (key2 === "subject_is_issuer")) || (key2 === "is_holder")) || (key2 === "same_subject"))){validate23.errors = [{instancePath:instancePath+"/constraints",schemaPath:"#/properties/constraints/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs32 === errors){if(data12.limit_disclosure !== undefined){let data13 = data12.limit_disclosure;const _errs33 = errors;if(typeof data13 !== "string"){validate23.errors = [{instancePath:instancePath+"/constraints/limit_disclosure",schemaPath:"#/properties/constraints/properties/limit_disclosure/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data13 === "required") || (data13 === "preferred"))){validate23.errors = [{instancePath:instancePath+"/constraints/limit_disclosure",schemaPath:"#/properties/constraints/properties/limit_disclosure/enum",keyword:"enum",params:{allowedValues: schema25.properties.constraints.properties.limit_disclosure.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs33 === errors;}else {var valid8 = true;}if(valid8){if(data12.statuses !== undefined){let data14 = data12.statuses;const _errs35 = errors;if(errors === _errs35){if(data14 && typeof data14 == "object" && !Array.isArray(data14)){if(data14.active !== undefined){let data15 = data14.active;const _errs37 = errors;if(errors === _errs37){if(data15 && typeof data15 == "object" && !Array.isArray(data15)){if(data15.directive !== undefined){let data16 = data15.directive;if(typeof data16 !== "string"){validate23.errors = [{instancePath:instancePath+"/constraints/statuses/active/directive",schemaPath:"#/properties/constraints/properties/statuses/properties/active/properties/directive/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data16 === "required") || (data16 === "allowed")) || (data16 === "disallowed"))){validate23.errors = [{instancePath:instancePath+"/constraints/statuses/active/directive",schemaPath:"#/properties/constraints/properties/statuses/properties/active/properties/directive/enum",keyword:"enum",params:{allowedValues: schema25.properties.constraints.properties.statuses.properties.active.properties.directive.enum},message:"must be equal to one of the allowed values"}];return false;}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/statuses/active",schemaPath:"#/properties/constraints/properties/statuses/properties/active/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid9 = _errs37 === errors;}else {var valid9 = true;}if(valid9){if(data14.suspended !== undefined){let data17 = data14.suspended;const _errs41 = errors;if(errors === _errs41){if(data17 && typeof data17 == "object" && !Array.isArray(data17)){if(data17.directive !== undefined){let data18 = data17.directive;if(typeof data18 !== "string"){validate23.errors = [{instancePath:instancePath+"/constraints/statuses/suspended/directive",schemaPath:"#/properties/constraints/properties/statuses/properties/suspended/properties/directive/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data18 === "required") || (data18 === "allowed")) || (data18 === "disallowed"))){validate23.errors = [{instancePath:instancePath+"/constraints/statuses/suspended/directive",schemaPath:"#/properties/constraints/properties/statuses/properties/suspended/properties/directive/enum",keyword:"enum",params:{allowedValues: schema25.properties.constraints.properties.statuses.properties.suspended.properties.directive.enum},message:"must be equal to one of the allowed values"}];return false;}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/statuses/suspended",schemaPath:"#/properties/constraints/properties/statuses/properties/suspended/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid9 = _errs41 === errors;}else {var valid9 = true;}if(valid9){if(data14.revoked !== undefined){let data19 = data14.revoked;const _errs45 = errors;if(errors === _errs45){if(data19 && typeof data19 == "object" && !Array.isArray(data19)){if(data19.directive !== undefined){let data20 = data19.directive;if(typeof data20 !== "string"){validate23.errors = [{instancePath:instancePath+"/constraints/statuses/revoked/directive",schemaPath:"#/properties/constraints/properties/statuses/properties/revoked/properties/directive/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data20 === "required") || (data20 === "allowed")) || (data20 === "disallowed"))){validate23.errors = [{instancePath:instancePath+"/constraints/statuses/revoked/directive",schemaPath:"#/properties/constraints/properties/statuses/properties/revoked/properties/directive/enum",keyword:"enum",params:{allowedValues: schema25.properties.constraints.properties.statuses.properties.revoked.properties.directive.enum},message:"must be equal to one of the allowed values"}];return false;}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/statuses/revoked",schemaPath:"#/properties/constraints/properties/statuses/properties/revoked/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid9 = _errs45 === errors;}else {var valid9 = true;}}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/statuses",schemaPath:"#/properties/constraints/properties/statuses/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid8 = _errs35 === errors;}else {var valid8 = true;}if(valid8){if(data12.fields !== undefined){let data21 = data12.fields;const _errs49 = errors;if(errors === _errs49){if(Array.isArray(data21)){var valid13 = true;const len3 = data21.length;for(let i3=0; i3<len3; i3++){const _errs51 = errors;if(!(validate24(data21[i3], {instancePath:instancePath+"/constraints/fields/" + i3,parentData:data21,parentDataProperty:i3,rootData}))){vErrors = vErrors === null ? validate24.errors : vErrors.concat(validate24.errors);errors = vErrors.length;}var valid13 = _errs51 === errors;if(!valid13){break;}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/fields",schemaPath:"#/properties/constraints/properties/fields/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid8 = _errs49 === errors;}else {var valid8 = true;}if(valid8){if(data12.subject_is_issuer !== undefined){let data23 = data12.subject_is_issuer;const _errs52 = errors;if(typeof data23 !== "string"){validate23.errors = [{instancePath:instancePath+"/constraints/subject_is_issuer",schemaPath:"#/properties/constraints/properties/subject_is_issuer/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data23 === "required") || (data23 === "preferred"))){validate23.errors = [{instancePath:instancePath+"/constraints/subject_is_issuer",schemaPath:"#/properties/constraints/properties/subject_is_issuer/enum",keyword:"enum",params:{allowedValues: schema25.properties.constraints.properties.subject_is_issuer.enum},message:"must be equal to one of the allowed values"}];return false;}var valid8 = _errs52 === errors;}else {var valid8 = true;}if(valid8){if(data12.is_holder !== undefined){let data24 = data12.is_holder;const _errs54 = errors;if(errors === _errs54){if(Array.isArray(data24)){var valid14 = true;const len4 = data24.length;for(let i4=0; i4<len4; i4++){let data25 = data24[i4];const _errs56 = errors;if(errors === _errs56){if(data25 && typeof data25 == "object" && !Array.isArray(data25)){let missing2;if(((data25.field_id === undefined) && (missing2 = "field_id")) || ((data25.directive === undefined) && (missing2 = "directive"))){validate23.errors = [{instancePath:instancePath+"/constraints/is_holder/" + i4,schemaPath:"#/properties/constraints/properties/is_holder/items/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {const _errs58 = errors;for(const key3 in data25){if(!((key3 === "field_id") || (key3 === "directive"))){validate23.errors = [{instancePath:instancePath+"/constraints/is_holder/" + i4,schemaPath:"#/properties/constraints/properties/is_holder/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs58 === errors){if(data25.field_id !== undefined){let data26 = data25.field_id;const _errs59 = errors;if(errors === _errs59){if(Array.isArray(data26)){var valid16 = true;const len5 = data26.length;for(let i5=0; i5<len5; i5++){const _errs61 = errors;if(typeof data26[i5] !== "string"){validate23.errors = [{instancePath:instancePath+"/constraints/is_holder/" + i4+"/field_id/" + i5,schemaPath:"#/properties/constraints/properties/is_holder/items/properties/field_id/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid16 = _errs61 === errors;if(!valid16){break;}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/is_holder/" + i4+"/field_id",schemaPath:"#/properties/constraints/properties/is_holder/items/properties/field_id/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid15 = _errs59 === errors;}else {var valid15 = true;}if(valid15){if(data25.directive !== undefined){let data28 = data25.directive;const _errs63 = errors;if(typeof data28 !== "string"){validate23.errors = [{instancePath:instancePath+"/constraints/is_holder/" + i4+"/directive",schemaPath:"#/properties/constraints/properties/is_holder/items/properties/directive/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data28 === "required") || (data28 === "preferred"))){validate23.errors = [{instancePath:instancePath+"/constraints/is_holder/" + i4+"/directive",schemaPath:"#/properties/constraints/properties/is_holder/items/properties/directive/enum",keyword:"enum",params:{allowedValues: schema25.properties.constraints.properties.is_holder.items.properties.directive.enum},message:"must be equal to one of the allowed values"}];return false;}var valid15 = _errs63 === errors;}else {var valid15 = true;}}}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/is_holder/" + i4,schemaPath:"#/properties/constraints/properties/is_holder/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid14 = _errs56 === errors;if(!valid14){break;}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/is_holder",schemaPath:"#/properties/constraints/properties/is_holder/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid8 = _errs54 === errors;}else {var valid8 = true;}if(valid8){if(data12.same_subject !== undefined){let data29 = data12.same_subject;const _errs65 = errors;if(errors === _errs65){if(Array.isArray(data29)){var valid17 = true;const len6 = data29.length;for(let i6=0; i6<len6; i6++){let data30 = data29[i6];const _errs67 = errors;if(errors === _errs67){if(data30 && typeof data30 == "object" && !Array.isArray(data30)){let missing3;if(((data30.field_id === undefined) && (missing3 = "field_id")) || ((data30.directive === undefined) && (missing3 = "directive"))){validate23.errors = [{instancePath:instancePath+"/constraints/same_subject/" + i6,schemaPath:"#/properties/constraints/properties/same_subject/items/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"}];return false;}else {const _errs69 = errors;for(const key4 in data30){if(!((key4 === "field_id") || (key4 === "directive"))){validate23.errors = [{instancePath:instancePath+"/constraints/same_subject/" + i6,schemaPath:"#/properties/constraints/properties/same_subject/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key4},message:"must NOT have additional properties"}];return false;break;}}if(_errs69 === errors){if(data30.field_id !== undefined){let data31 = data30.field_id;const _errs70 = errors;if(errors === _errs70){if(Array.isArray(data31)){var valid19 = true;const len7 = data31.length;for(let i7=0; i7<len7; i7++){const _errs72 = errors;if(typeof data31[i7] !== "string"){validate23.errors = [{instancePath:instancePath+"/constraints/same_subject/" + i6+"/field_id/" + i7,schemaPath:"#/properties/constraints/properties/same_subject/items/properties/field_id/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid19 = _errs72 === errors;if(!valid19){break;}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/same_subject/" + i6+"/field_id",schemaPath:"#/properties/constraints/properties/same_subject/items/properties/field_id/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid18 = _errs70 === errors;}else {var valid18 = true;}if(valid18){if(data30.directive !== undefined){let data33 = data30.directive;const _errs74 = errors;if(typeof data33 !== "string"){validate23.errors = [{instancePath:instancePath+"/constraints/same_subject/" + i6+"/directive",schemaPath:"#/properties/constraints/properties/same_subject/items/properties/directive/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data33 === "required") || (data33 === "preferred"))){validate23.errors = [{instancePath:instancePath+"/constraints/same_subject/" + i6+"/directive",schemaPath:"#/properties/constraints/properties/same_subject/items/properties/directive/enum",keyword:"enum",params:{allowedValues: schema25.properties.constraints.properties.same_subject.items.properties.directive.enum},message:"must be equal to one of the allowed values"}];return false;}var valid18 = _errs74 === errors;}else {var valid18 = true;}}}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/same_subject/" + i6,schemaPath:"#/properties/constraints/properties/same_subject/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid17 = _errs67 === errors;if(!valid17){break;}}}else {validate23.errors = [{instancePath:instancePath+"/constraints/same_subject",schemaPath:"#/properties/constraints/properties/same_subject/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid8 = _errs65 === errors;}else {var valid8 = true;}}}}}}}}else {validate23.errors = [{instancePath:instancePath+"/constraints",schemaPath:"#/properties/constraints/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs30 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate23.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate23.errors = vErrors;return errors === 0;}function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.presentation_definition !== undefined){let data0 = data.presentation_definition;const _errs1 = errors;if(errors === _errs1){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing0;if(((data0.id === undefined) && (missing0 = "id")) || ((data0.input_descriptors === undefined) && (missing0 = "input_descriptors"))){validate20.errors = [{instancePath:instancePath+"/presentation_definition",schemaPath:"#/properties/presentation_definition/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs3 = errors;for(const key0 in data0){if(!((((((key0 === "id") || (key0 === "name")) || (key0 === "purpose")) || (key0 === "format")) || (key0 === "submission_requirements")) || (key0 === "input_descriptors"))){validate20.errors = [{instancePath:instancePath+"/presentation_definition",schemaPath:"#/properties/presentation_definition/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs3 === errors){if(data0.id !== undefined){const _errs4 = errors;if(typeof data0.id !== "string"){validate20.errors = [{instancePath:instancePath+"/presentation_definition/id",schemaPath:"#/properties/presentation_definition/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data0.name !== undefined){const _errs6 = errors;if(typeof data0.name !== "string"){validate20.errors = [{instancePath:instancePath+"/presentation_definition/name",schemaPath:"#/properties/presentation_definition/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs6 === errors;}else {var valid1 = true;}if(valid1){if(data0.purpose !== undefined){const _errs8 = errors;if(typeof data0.purpose !== "string"){validate20.errors = [{instancePath:instancePath+"/presentation_definition/purpose",schemaPath:"#/properties/presentation_definition/properties/purpose/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs8 === errors;}else {var valid1 = true;}if(valid1){if(data0.format !== undefined){let data4 = data0.format;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){const _errs13 = errors;for(const key1 in data4){if(!(((pattern0.test(key1)) || (pattern1.test(key1))) || (pattern2.test(key1)))){validate20.errors = [{instancePath:instancePath+"/presentation_definition/format",schemaPath:"#/definitions/format/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs13 === errors){var valid3 = true;for(const key2 in data4){if(pattern0.test(key2)){let data5 = data4[key2];const _errs14 = errors;if(errors === _errs14){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){let missing1;if((data5.alg === undefined) && (missing1 = "alg")){validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key2.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/definitions/format/patternProperties/%5Ejwt%24%7C%5Ejwt_vc%24%7C%5Ejwt_vp%24/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs16 = errors;for(const key3 in data5){if(!(key3 === "alg")){validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key2.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/definitions/format/patternProperties/%5Ejwt%24%7C%5Ejwt_vc%24%7C%5Ejwt_vp%24/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs16 === errors){if(data5.alg !== undefined){let data6 = data5.alg;const _errs17 = errors;if(errors === _errs17){if(Array.isArray(data6)){if(data6.length < 1){validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/alg",schemaPath:"#/definitions/format/patternProperties/%5Ejwt%24%7C%5Ejwt_vc%24%7C%5Ejwt_vp%24/properties/alg/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid5 = true;const len0 = data6.length;for(let i0=0; i0<len0; i0++){const _errs19 = errors;if(typeof data6[i0] !== "string"){validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/alg/" + i0,schemaPath:"#/definitions/format/patternProperties/%5Ejwt%24%7C%5Ejwt_vc%24%7C%5Ejwt_vp%24/properties/alg/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs19 === errors;if(!valid5){break;}}}}else {validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key2.replace(/~/g, "~0").replace(/\//g, "~1")+"/alg",schemaPath:"#/definitions/format/patternProperties/%5Ejwt%24%7C%5Ejwt_vc%24%7C%5Ejwt_vp%24/properties/alg/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}}}else {validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key2.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/definitions/format/patternProperties/%5Ejwt%24%7C%5Ejwt_vc%24%7C%5Ejwt_vp%24/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs14 === errors;if(!valid3){break;}}}if(valid3){var valid3 = true;for(const key4 in data4){if(pattern1.test(key4)){let data8 = data4[key4];const _errs21 = errors;if(errors === _errs21){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){let missing2;if((data8.proof_type === undefined) && (missing2 = "proof_type")){validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key4.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/definitions/format/patternProperties/%5Eldp_vc%24%7C%5Eldp_vp%24%7C%5Eldp%24/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {const _errs23 = errors;for(const key5 in data8){if(!(key5 === "proof_type")){validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key4.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/definitions/format/patternProperties/%5Eldp_vc%24%7C%5Eldp_vp%24%7C%5Eldp%24/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key5},message:"must NOT have additional properties"}];return false;break;}}if(_errs23 === errors){if(data8.proof_type !== undefined){let data9 = data8.proof_type;const _errs24 = errors;if(errors === _errs24){if(Array.isArray(data9)){if(data9.length < 1){validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key4.replace(/~/g, "~0").replace(/\//g, "~1")+"/proof_type",schemaPath:"#/definitions/format/patternProperties/%5Eldp_vc%24%7C%5Eldp_vp%24%7C%5Eldp%24/properties/proof_type/minItems",keyword:"minItems",params:{limit: 1},message:"must NOT have fewer than 1 items"}];return false;}else {var valid7 = true;const len1 = data9.length;for(let i1=0; i1<len1; i1++){const _errs26 = errors;if(typeof data9[i1] !== "string"){validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key4.replace(/~/g, "~0").replace(/\//g, "~1")+"/proof_type/" + i1,schemaPath:"#/definitions/format/patternProperties/%5Eldp_vc%24%7C%5Eldp_vp%24%7C%5Eldp%24/properties/proof_type/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs26 === errors;if(!valid7){break;}}}}else {validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key4.replace(/~/g, "~0").replace(/\//g, "~1")+"/proof_type",schemaPath:"#/definitions/format/patternProperties/%5Eldp_vc%24%7C%5Eldp_vp%24%7C%5Eldp%24/properties/proof_type/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}}}}}else {validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key4.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/definitions/format/patternProperties/%5Eldp_vc%24%7C%5Eldp_vp%24%7C%5Eldp%24/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs21 === errors;if(!valid3){break;}}}if(valid3){var valid3 = true;for(const key6 in data4){if(pattern2.test(key6)){var valid3 = false;validate20.errors = [{instancePath:instancePath+"/presentation_definition/format/" + key6.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/definitions/format/patternProperties/additionalProperties/false schema",keyword:"false schema",params:{},message:"boolean schema is false"}];return false;if(!valid3){break;}}}}}}}else {validate20.errors = [{instancePath:instancePath+"/presentation_definition/format",schemaPath:"#/definitions/format/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs10 === errors;}else {var valid1 = true;}if(valid1){if(data0.submission_requirements !== undefined){let data12 = data0.submission_requirements;const _errs28 = errors;if(errors === _errs28){if(Array.isArray(data12)){var valid8 = true;const len2 = data12.length;for(let i2=0; i2<len2; i2++){const _errs30 = errors;if(!(validate21(data12[i2], {instancePath:instancePath+"/presentation_definition/submission_requirements/" + i2,parentData:data12,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? validate21.errors : vErrors.concat(validate21.errors);errors = vErrors.length;}var valid8 = _errs30 === errors;if(!valid8){break;}}}else {validate20.errors = [{instancePath:instancePath+"/presentation_definition/submission_requirements",schemaPath:"#/properties/presentation_definition/properties/submission_requirements/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid1 = _errs28 === errors;}else {var valid1 = true;}if(valid1){if(data0.input_descriptors !== undefined){let data14 = data0.input_descriptors;const _errs31 = errors;if(errors === _errs31){if(Array.isArray(data14)){var valid9 = true;const len3 = data14.length;for(let i3=0; i3<len3; i3++){const _errs33 = errors;if(!(validate23(data14[i3], {instancePath:instancePath+"/presentation_definition/input_descriptors/" + i3,parentData:data14,parentDataProperty:i3,rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var valid9 = _errs33 === errors;if(!valid9){break;}}}else {validate20.errors = [{instancePath:instancePath+"/presentation_definition/input_descriptors",schemaPath:"#/properties/presentation_definition/properties/input_descriptors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid1 = _errs31 === errors;}else {var valid1 = true;}}}}}}}}}else {validate20.errors = [{instancePath:instancePath+"/presentation_definition",schemaPath:"#/properties/presentation_definition/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}